# tasks file for kibatic.traefik
---
- name: Create traefik systemd unit
  template:
    src: "{{ traefik_systemd_unit_template }}.j2"
    dest: "{{ traefik_systemd_unit_dest }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart traefik

- name: Ensure install & config directory exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik_install_dir }}"
    - "{{ traefik_config_file | dirname }}"

- name: Copy traefik config file
  template:
    src: "{{ traefik_template }}.j2"
    dest: "{{ traefik_config_file }}"
    owner: root
    group: root
    mode: 0744
  notify:
    - Restart traefik

- name: Copy traefik dynamic config files (if traevik v2.x.x & file provider)
  template:
    src: "{{ item.src }}.j2"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0744
  notify:
    - Restart traefik
  with_items: "{{ traefik_dynamic_configs | list }}"
  when: traefik_dynamic_configs is defined

- name: Ensure traefik service is stopped before traefik update
  service:
    name: traefik
    state: stopped
    enabled: true
  when: traefik_update

- name: Download Untarred Traefik binary
  get_url:
    url: "{{ traefik_binary_url }}"
    dest: "{{ traefik_bin_path }}"
    owner: root
    group: root
    mode: 0755
    force: "{{ traefik_update }}"
  when: not traefik_binary_url.endswith(".tar.gz")

- name: Download & Expand Tarred Traefik binary
  unarchive:
    src: "{{ traefik_binary_url }}"
    remote_src: true
    dest: "{{ traefik_tmp_path }}"
  when: traefik_binary_url.endswith(".tar.gz")

- name: Copy Expanded Traefik binary only to bin path
  copy:
    src: "{{ traefik_tmp_path }}/traefik"
    remote_src: true
    dest: "{{ traefik_bin_path }}"
    owner: root
    group: root
    mode: 0755
    force: "{{ traefik_update }}"
  when: traefik_binary_url.endswith(".tar.gz")

- name: Ensure traefik service is enabled and running
  systemd:
    name: traefik
    state: started
    enabled: true
    daemon_reload: true